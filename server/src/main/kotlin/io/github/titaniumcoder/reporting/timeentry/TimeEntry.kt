package io.github.titaniumcoder.reporting.timeentry

import io.github.titaniumcoder.reporting.project.Project
import io.github.titaniumcoder.reporting.user.User
import java.time.Duration
import java.time.LocalDate
import java.time.LocalDateTime
import javax.persistence.*
import javax.validation.constraints.Size

@Entity
@Table(name = "time_entry")
data class TimeEntry(
        // Autogenerated
        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        val id: Long?,

        @Column(name = "starting")
        val starting: LocalDateTime,

        @Column(name = "ending")
        val ending: LocalDateTime?,

        @ManyToOne(optional = true, cascade = [CascadeType.ALL])
        @JoinColumn(name = "project_id")
        val project: Project?,

        @Size(max = 200)
        val description: String?,

        @ManyToOne(optional = false, cascade = [CascadeType.ALL])
        @JoinColumn(name = "username")
        val user: User,

        val billable: Boolean = true,
        val billed: Boolean = false
)

data class TimeEntryDto(
        // Autogenerated
        val id: Long?,

        val date: LocalDate,
        val starting: LocalDateTime,
        val ending: LocalDateTime?,
        val projectId: Long?,

        val projectName: String?,

        @Size(max = 200)
        val description: String?,

        val username: String,

        val billable: Boolean = true,
        val billed: Boolean = false,

        val timeUsed: Duration,
        val amount: Double
)
